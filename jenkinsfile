pipeline {
    agent any

    environment {
        IMAGE_NAME = "lucasycosta/nginx"
        DOCKER_REGISTRY_API = "https://registry.hub.docker.com/v2/repositories"
    }

    stages {
        stage('Get Latest Image Tag') {
            steps {
                script {
                    def response = bat(
                        script: """
                            $response = Invoke-RestMethod -Uri '${DOCKER_REGISTRY_API}/${IMAGE_NAME}/tags' -Method GET
                            $tags = $response.results.name
                            $latestTag = $tags | Sort-Object -Descending | Select-Object -First 1
                            Write-Output $latestTag
                        """,
                        returnStdout: true
                    ).trim()

                    if (!response) {
                        error("Failed to fetch the latest tag for ${IMAGE_NAME}")
                    }
                    
                    env.LATEST_TAG = response
                    echo "Latest tag found: ${env.LATEST_TAG}"
                }
            }
        }

        stage('Update Docker Compose') {
            steps {
                script {
                    powershell """
                        (Get-Content docker-compose.yaml) `
                        -replace 'image: ${IMAGE_NAME}:.*', 'image: ${IMAGE_NAME}:${LATEST_TAG}' `
                        | Set-Content docker-compose.yaml
                    """
                }
            }
        }

        stage('Deploy Application') {
            steps {
                bat """
                    docker-compose pull
                    docker-compose up -d
                """
            }
        }
    }

    post {
        success {
            echo 'Deployment succeeded!'
        }
        failure {
            echo 'Deployment failed.'
        }
    }
}
